//sep/14/2018 ac 
//只需要记录一下深度即可，若大于当前res中的最大vector数目，则添加到第一条，否则添加到第size-level项
//注意，level的起始值，这里规定为从1开始会比较方便

/**
 * Definition for a binary tree node. 

* struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    void DFS(TreeNode* T, vector<vector<int>>& res, int level)
    {
        if(T == NULL)
        {
            return;
        }
        else if(res.size() < level)
        {
            res.insert(res.begin(), {T->val});
        }
        else
        {
            res[res.size() - level].push_back(T->val);
        }
        DFS(T->left, res, level + 1);
        DFS(T->right, res, level + 1);
    }
    
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        vector<vector<int>> res;
        DFS(root, res, 1);
        return res;
    }
};