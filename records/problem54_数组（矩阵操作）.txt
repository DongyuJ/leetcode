//Jun/25/2018 ac 3ms beats 97%
//需要旋转输出，只需要注意边界的变化即可，由于可能不是在整次循环后结束，所以在中间还加入了结束的判定

class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
	vector<int> res;
    if(matrix.empty())
    {
        return res;
    }
    int length = matrix[0].size();
	int height = matrix.size();
	int layer = min(height, length) / 2 + (min(height, length) % 2);
	int pi = 0;
	int pj = -1;
	for (int i = 0; i < layer; i++)
	{
		while (pj != length - i - 1)
		{
			pj++;
			res.push_back(matrix[pi][pj]);
		}
		if (res.size() == height * length)
		{
			break;
		}
		while (pi != height - i - 1)
		{
			pi++;
			res.push_back(matrix[pi][pj]);
		}
		if (res.size() == height * length)
		{
			break;
		}
		while (pj != i)
		{
			pj--; 
			res.push_back(matrix[pi][pj]);
		}
		if (res.size() == height * length)
		{
			break;
		}
		//res.pop_back();
		while (pi > i + 1)
		{
			pi--;
			res.push_back(matrix[pi][pj]);
		}
		//pi++;
		//pj++;
	}
	return res;
}
};