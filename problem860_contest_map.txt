//Jul/1/2018 ac contest
//At a lemonade stand, each lemonade costs $5. 

//Customers are standing in a queue to buy from you, and order one at a time (in the order specified by bills).

//Each customer will only buy one lemonade and pay with either a $5, $10, or $20 bill.  You must provide the correct change to each customer, 

//so that the net transaction is that the customer pays $5.

//Note that you don't have any change in hand at first.

//Return true if and only if you can provide every customer with correct change.

//即，收到五块钱就将五块钱数目增加，收到十块钱，且能找回就增加十块钱的数目，收到二十块钱优先考虑找十块钱，然后找五块钱，分情况讨论即可

class Solution {
public:
    bool lemonadeChange(vector<int>& bills) {
	map<int, int> changes;
	changes[5] = 0;
	changes[10] = 0;

	if (bills.empty())
	{
		return true;
	}
	if (bills[0] != 5)
	{
		return false;
	}
	for (int i = 0; i < bills.size(); i++)
	{
		if (bills[i] == 5)
		{
			changes[5]++;
		}
		else if (bills[i] == 10)
		{
			if (changes[5] == 0)
			{
				return false;
			}
			else
			{
				changes[5]--;
				changes[10]++;
			}
		}
		else
		{
			if (changes[10] > 0)
			{
				changes[10]--;
				if (changes[5] > 0)
				{
					changes[5]--;
				}
				else
				{
					return false;
				}
			}
			else
			{
				if (changes[5] >= 3)
				{
					changes[5] -= 3;
				}
				else
				{
					return false;
				}
			}
		}
	}
	return true;
}
};