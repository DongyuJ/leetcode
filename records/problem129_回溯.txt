//Feb/24/2019 ac beats100%
//从上向下读数字，每一层乘十在加上当前层的数
//回溯的开头判断一下是否为空直接返回
//然后再判断是否为叶子节点， 是就把目前的读下来的数加到sum里面

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    void compute_sum(TreeNode* root, int cur_sum, int &sum){
        if(root == NULL){
            return;
        }
        cur_sum = 10 * cur_sum + root->val;
        
        if(root->left == NULL && root->right == NULL){
            sum += cur_sum;
            // cout << cur_sum << endl;
            return;
        }
        
        compute_sum(root->left, cur_sum, sum);
        compute_sum(root->right, cur_sum, sum);
        
        return;
    }
    
    int sumNumbers(TreeNode* root) {
        if(root == NULL){
            return 0;
        }
        int res = 0;
        compute_sum(root, 0, res);
        
        return res;
    }
};